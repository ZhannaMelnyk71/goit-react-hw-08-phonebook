{"version":3,"file":"static/js/394.0b309524.chunk.js","mappings":"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","sources":["components/PhoneContacts/PhoneContacts.styled.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/PhoneContacts/PhoneContacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","../node_modules/nanoid/index.browser.js","components/ContactsForm/ContactsForm.styled.jsx","pages/Contacts/ContactsPage.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/Title/Title.styled.jsx","components/Title/Title.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","pages/Contacts/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n\n  margin: 0;\n  margin-top: 20px;\n  padding: 0;\n`;\n\nexport const ContactItem = styled.p`\n  color: black;\n  font-weight: 500;\n  margin-left: 10px;\n  padding: 0;\n  margin: 0;\n  margin-right: 15px;\n  font-style: normal;\n`;\nexport const Contact = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  // margin-top: 20px;\n  font-size: 20px;\n`;\n\nexport const DeleteButton = styled.button`\n  min-width: 80px;\n  height: 35px;\n  font-size: 13px;\n  padding: 5px;\n  margin-right: 20px;\n  margin-left: 15px;\n  border-radius: 4px;\n  background-color: black;\n  color: white;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: grey;\n  }\n`;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts.items;\nexport const selectFilters = state => state.contacts.filters;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilters],\n  (contacts, filters) => {\n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filters.toLowerCase());\n    });\n  }\n);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Contact,\n  ContactItem,\n  DeleteButton,\n  List,\n} from './PhoneContacts.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const PhoneContacts = () => {\n  const dispatch = useDispatch();\n  const NewFilteredContactsList = useSelector(selectVisibleContacts);\n\n  return (\n    <List>\n      {NewFilteredContactsList.map(({ id, name, number }) => (\n        <Contact key={id}>\n          <ContactItem>\n            {name}: {number}\n          </ContactItem>\n          <DeleteButton onClick={() => dispatch(deleteContact(id))}>\n            Delete\n          </DeleteButton>\n        </Contact>\n      ))}\n    </List>\n  );\n};\nexport default PhoneContacts;\n","import styled from 'styled-components';\n\nexport const Input = styled.input`\n  padding: 3px;\n  margin-left: 20px;\n  height: 25px;\n  width: 170px;\n`;\n\nexport const Label = styled.title`\n  display: flex;\n  flex-direction: column;\n  align-items: first baseline;\n  margin: 0;\n  margin-bottom: 10px;\n  font-weight: 600;\n  font-size: 17px;\n  line-height: 1.54;\n  color: black;\n`;\n","import React from 'react';\nimport { Input, Label } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilters } from 'redux/contacts/selectors';\nimport { filterContacts } from 'redux/contacts/contactSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  const handleFilterChange = event =>\n    dispatch(filterContacts(event.currentTarget.value));\n\n  return (\n    <Label>\n      Filter by name\n      <Input type=\"text\" value={filter} onChange={handleFilterChange} />\n    </Label>\n  );\n};\nexport default Filter;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { urlAlphabet } from './url-alphabet/index.js'\nlet random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nlet customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nlet customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nlet nanoid = (size = 21) => {\n  let id = ''\n  let bytes = crypto.getRandomValues(new Uint8Array(size))\n  while (size--) {\n    let byte = bytes[size] & 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte < 63) {\n      id += '_'\n    } else {\n      id += '-'\n    }\n  }\n  return id\n}\nexport { nanoid, customAlphabet, customRandom, urlAlphabet, random }\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  width: 300px;\n  padding: 10px;\n`;\n\nexport const FormInput = styled.input`\n  padding: 5px;\n  /* margin-left: 10px; */\n  margin-bottom: 20px;\n  height: 20px;\n  width: 150px;\n\n`;\n\nexport const AddButton = styled.button`\n  display: block;\n  margin-left: 20px;\n  margin-right: auto;\n  min-width: 130px;\n  height: 35px;\n  padding: 5px;\n   font-size: 17px;\n  background-color: black;\n  color: white;\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: grey;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  justify-content: space-between;\n  font-weight: 600;\n  padding: 0;\n  margin: 0;\n  margin-bottom: 10px;\n  margin-left: 10px;\n\n  font-size: 17px;\n  color: black;\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  // display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 30px;\n`;\n\nexport const SubContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`;\n\nexport const ContactListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { AddButton, Form, FormInput, Label } from './ContactsForm.styled';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Container } from 'pages/Contacts/ContactsPage.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const dispatch = useDispatch();\n  const contactList = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const addNewContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    handleCheck(addNewContact);\n    setName('');\n    setNumber('');\n  };\n\n  const handleCheck = addNewContact => {\n    contactList.find(\n      contact => contact.name.toLowerCase() === addNewContact.name.toLowerCase()\n    )\n      ? toast.error(`${name}is already in contacts.`)\n      : dispatch(addContact(addNewContact));\n  };\n\n  return (\n    <Container>\n      <Form onSubmit={handleSubmit} autoComplete=\"off\">\n        <Label htmlFor=\"name\">\n          Name\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            onChange={handleChange}\n            value={name}\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            onChange={handleChange}\n            value={number}\n          />\n        </Label>\n        <AddButton type=\"submit\">Add contact</AddButton>\n      </Form>\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const TitleItem = styled.h2`\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding: 10px;\n  font-weight: 500;\n  color: black;\n`;\n","import { TitleItem } from './Title.styled';\n\nexport const Title = ({ title }) => {\n  return (\n    <div>\n      <TitleItem>{title}</TitleItem>\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NotificationMessage = styled.p`\n  font-size: 20px;\n  color: white;\n  font-style: italic;\n  margin-right: 25px;\n  line-height: 1.5;\n`;\n","import { NotificationMessage } from './Notification.styled';\n\nexport const Notification = ({ notification }) => {\n  return (\n    <div>\n      <NotificationMessage>{notification}</NotificationMessage>\n    </div>\n  );\n};\n","// import { useEffect } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { fetchContacts } from 'redux/contacts/operations';\nimport PhoneContacts from '../../components/PhoneContacts/PhoneContacts';\nimport Filter from '../../components/Filter/Filter';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\n\nimport { ContactForm } from 'components/ContactsForm/ContactsForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { useEffect } from 'react';\nimport { Title } from 'components/Title/Title';\nimport { Loader } from 'components/Loader/Loader';\nimport { Notification } from 'components/Notification/Notification';\nimport {\n  ContactListContainer,\n  Container,\n  SubContainer,\n} from './ContactsPage.styled';\n// import { Helmet } from 'react-helmet';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contactList = useSelector(selectContacts);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <SubContainer>\n        <Title title={'Phonebook'} />\n        <ContactForm />\n        {isLoading && !error && <Loader />}\n      </SubContainer>\n      <ContactListContainer>\n        {<Title title={'Contacts'} />}\n        {contactList.length > 0 && <Filter />}\n        {contactList.length === 0 ? (\n          <Notification notification={'There are no contacts.'} />\n        ) : (\n          <PhoneContacts />\n        )}\n      </ContactListContainer>\n    </Container>\n  );\n};\nexport default ContactsPage;\n"],"names":["List","styled","ContactItem","Contact","DeleteButton","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilters","filters","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","contact","toLowerCase","includes","dispatch","useDispatch","NewFilteredContactsList","useSelector","id","number","onClick","deleteContact","Input","Label","type","onChange","event","filterContacts","currentTarget","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","nanoid","size","bytes","crypto","getRandomValues","Uint8Array","byte","toString","toUpperCase","Form","FormInput","AddButton","Container","SubContainer","ContactListContainer","ContactForm","useState","setName","setNumber","contactList","handleChange","handleCheck","addNewContact","toast","addContact","onSubmit","preventDefault","autoComplete","htmlFor","pattern","title","required","TitleItem","Title","NotificationMessage","Notification","notification","useEffect","fetchContacts","Loader"],"sourceRoot":""}